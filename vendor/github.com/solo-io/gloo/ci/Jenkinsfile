#!/usr/bin/env groovy
podTemplate(label: 'gloo-builder',
containers: [
    containerTemplate(
        name: 'jenkins',
        image: 'soloio/jenkins:latest',
        ttyEnabled: true,
        alwaysPullImage: true,
        command: 'cat'),
    containerTemplate(
        name: 'helm',
        image: 'devth/helm:2.8.1',
        ttyEnabled: true,
        command: 'cat'),
],
envVars: [
    envVar(key: 'DOCKER_CONFIG', value: '/etc/docker')
],
volumes: [
    hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
    secretVolume(secretName: 'soloio-docker-hub', mountPath: '/etc/docker'),
    secretVolume(secretName: 'soloio-github', mountPath: '/etc/github'),
    secretVolume(secretName: 'ilackarms-kubeconfig', mountPath: '/etc/kube/'),
    secretVolume(secretName: 'soloio-aws', mountPath: '/etc/aws/')
]) {

    properties([
        parameters ([
            booleanParam(
                defaultValue: false,
                description: 'Skip testing stage',
                name: 'SKIP_TESTS'),
            stringParam(
                defaultValue: 'v0.1.6-125',
                description: 'Image tag of envoy container to use',
                name: 'ENVOY_IMAGE_TAG'),
        ])
    ])

    node('gloo-builder') {
        stage('init projects') {
            container('jenkins') {
                echo 'Cloning repos'
                sh '''#!/bin/bash -ex
                    mkdir -p ${GOPATH}/src/github.com/solo-io/
                    cd ${GOPATH}/src/github.com/solo-io/
                    #TODO(yuval-k): should we use SCM Checkout to support forks and brances?
                    git clone https://github.com/solo-io/gloo 
                    cd gloo
                        (dep ensure -v -vendor-only || true)
                    cd ..
                '''
            }
        }
        stage('test') {
            container('jenkins') {
                echo 'Running tests'
                sh '''#!/bin/bash -ex
                    mkdir -p ${HOME}/.kube/
                    cp /etc/kube/* ${HOME}/.kube/
                    mkdir -p ${HOME}/.aws/
                    cp /etc/aws/* ${HOME}/.aws/
                    cd ${GOPATH}/src/github.com/solo-io/gloo
                    # echo "WARNING: REMOVING TESTS"
                    # rm gloo/internal/control-plane/xds/*_test.go
                    # rm gloo/pkg/secretwatcher/vault/*_test.go
                    export DISABLE_COLOR=1
                    if [ "$SKIP_TESTS" != "true" ]; then
                        export RUN_KUBE_TESTS=1
                        # TODO: add console tests
                        # TODO: only run cover and race in unit tests and not in kube_e2e (or anything else that is time sensitive)
                        ginkgo -r --skipPackage xds,vault --noColor  --randomizeAllSpecs --randomizeSuites --failOnPending --cover --trace --race --progress pkg internal
                        ginkgo -r --noColor  --randomizeAllSpecs --randomizeSuites --failOnPending --trace --progress test
                    fi
                '''
            }
        }
        stage('build images') {
            container('jenkins') {
                echo 'Building images'
                sh '''#!/bin/bash -ex
                    cd ${GOPATH}/src/github.com/solo-io/gloo
                    TAG=v1.0.8-$BUILD_NUMBER
                    
                    GLOO_PROJECTS="control-plane function-discovery kube-ingress-controller upstream-discovery"

                    for i in ${GLOO_PROJECTS}; do
                        if [[ -f cmd/$i/Dockerfile ]]; then
                            make IMAGE_TAG=$TAG "$i-docker-push"
                            sed -i "s@image: soloio/$i:.*@image: soloio/$i:$TAG-$BUILD_NUMBER@g" ${GOPATH}/src/github.com/solo-io/gloo/install/kube/install.yaml
                        fi
                    done


                    # just re-tag and push new Envoy image
                    # use gloo's tag to tag envoy as well
                    #TODO(yuval-k): should we change this to build envoy?
                    docker pull soloio/envoy:$ENVOY_IMAGE_TAG
                    docker tag soloio/envoy:$ENVOY_IMAGE_TAG soloio/envoy:$TAG
                    docker push soloio/envoy:$TAG
                    sed -i "s@image: soloio/envoy:.*@image: soloio/envoy:$TAG@g" ${GOPATH}/src/github.com/solo-io/gloo/install/kube/install.yaml
                '''
            }
        }
        stage('push new install') {
            container('jenkins') {
                sh '''#!/bin/bash -ex
                    cd ${GOPATH}/src/github.com/solo-io/
                    cp /etc/github/id_rsa $PWD
                    chmod 400 $PWD/id_rsa
                    export GIT_SSH_COMMAND="ssh -i $PWD/id_rsa -o 'StrictHostKeyChecking no'"
                    cd gloo/install
                    git checkout -b jenkins-$BUILD_NUMBER
                    git add kube/install.yaml
                    git config --global user.email "bot@soloio.com"
                    git config --global user.name "Solo Buildbot"
                    git commit -am "Jenkins: updated for jenkins-$BUILD_NUMBER"
                    git remote set-url origin git@github.com:solo-io/gloo.git
                    git push origin jenkins-$BUILD_NUMBER:jenkins-$BUILD_NUMBER
                    rm ../../id_rsa
                ''' 
            }
        }
    }
}
