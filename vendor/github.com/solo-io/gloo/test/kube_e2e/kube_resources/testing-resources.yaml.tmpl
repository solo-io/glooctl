---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: auditor
  name: auditor
  namespace: default
spec:
  selector:
    matchLabels:
      gloo: auditor
  replicas: 1
  template:
    metadata:
      labels:
        gloo: auditor
    spec:
      containers:
      - image: soloio/auditor:v0.1
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: auditor
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: auditor
  labels:
    sevice: auditor
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: auditor

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: event-emitter
  name: event-emitter
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      gloo: event-emitter
  replicas: 1
  template:
    metadata:
      labels:
        gloo: event-emitter
    spec:
      containers:
      - image: soloio/event-emitter:{{ .ImageTag }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: event-emitter
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: event-emitter
  labels:
    sevice: event-emitter
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: event-emitter
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: upstream-for-events
  name: upstream-for-events
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      gloo: upstream-for-events
  replicas: 1
  template:
    metadata:
      labels:
        gloo: upstream-for-events
    spec:
      containers:
      - image: soloio/upstream-for-events:{{ .ImageTag }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: upstream-for-events
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: upstream-for-events
  labels:
    sevice: upstream-for-events
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: upstream-for-events
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: grpc-test-service
  name: grpc-test-service
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      gloo: grpc-test-service
  replicas: 1
  template:
    metadata:
      labels:
        gloo: grpc-test-service
    spec:
      containers:
      - image: soloio/grpc-test-service:{{ .ImageTag }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: grpc-test-service
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-test-service
  labels:
    sevice: grpc-test-service
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: grpc-test-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: helloservice-2
  name: helloservice-2
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      gloo: helloservice-2
  replicas: 1
  template:
    metadata:
      labels:
        gloo: helloservice-2
    spec:
      containers:
      - image: soloio/helloservice:{{ .ImageTag }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: helloservice-2
        args:
        - "--reply=expected-reply-2"
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: helloservice-2
  labels:
    sevice: helloservice-2
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: helloservice-2
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    gloo: helloservice
  name: helloservice
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      gloo: helloservice
  replicas: 1
  template:
    metadata:
      labels:
        gloo: helloservice
    spec:
      containers:
      - image: soloio/helloservice:{{ .ImageTag }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: helloservice
        args:
        - "--reply=expected-reply-1"
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: helloservice
  labels:
    sevice: helloservice
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    gloo: helloservice
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    gloo: testrunner
  name: testrunner
  namespace: {{.Namespace}}
spec:
  containers:
  - image: soloio/testrunner:{{ .ImageTag }}
    imagePullPolicy: {{ .ImagePullPolicy }}
    command:
      - sleep
      - "36000"
    name: testrunner
  restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: petstore
  name: petstore
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      app: petstore
  replicas: 1
  template:
    metadata:
      labels:
        app: petstore
    spec:
      containers:
      - image: soloio/petstore-example:latest
        name: petstore
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: petstore
  namespace: {{.Namespace}}
  labels:
    sevice: petstore
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: petstore

---
# nats-streaming pod
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nats-streaming
  name: nats-streaming
  namespace: {{.Namespace}}
spec:
  selector:
    matchLabels:
      app: nats-streaming
  replicas: 1
  template:
    metadata:
      labels:
        app: nats-streaming
    spec:
      containers:
      - image: nats-streaming
        name: nats-streaming
        ports:
        - containerPort: 4222
          name: nats
---
# nats-streaming service
apiVersion: v1
kind: Service
metadata:
  name: nats-streaming
  labels:
    app: nats-streaming
  namespace: {{.Namespace}}
spec:
  ports:
  - port: 4222
    protocol: TCP
  selector:
    app: nats-streaming