// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transformation_filter.proto

/*
Package transformation is a generated protocol buffer package.

It is generated from these files:
	transformation_filter.proto

It has these top-level messages:
	Transformations
	Transformation
	Extraction
	TransformationTemplate
	InjaTemplate
	Passthrough
	MergeExtractorsToBody
	HeaderBodyTransform
*/
package transformation

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// [#protodoc-title: Lambda]
// Lambda :ref:`configuration overview <config_http_filters_lambda>`.
type Transformations struct {
	Transformations map[string]*Transformation `protobuf:"bytes,1,rep,name=transformations" json:"transformations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Transformations) Reset()         { *m = Transformations{} }
func (m *Transformations) String() string { return proto.CompactTextString(m) }
func (*Transformations) ProtoMessage()    {}
func (*Transformations) Descriptor() ([]byte, []int) {
	return fileDescriptorTransformationFilter, []int{0}
}

func (m *Transformations) GetTransformations() map[string]*Transformation {
	if m != nil {
		return m.Transformations
	}
	return nil
}

// [#proto-status: experimental]
type Transformation struct {
	// Template is in the transformed request language domain
	// currently both are JSON
	//
	// Types that are valid to be assigned to TransformationType:
	//	*Transformation_TransformationTemplate
	//	*Transformation_HeaderBodyTransform
	TransformationType isTransformation_TransformationType `protobuf_oneof:"transformation_type"`
}

func (m *Transformation) Reset()         { *m = Transformation{} }
func (m *Transformation) String() string { return proto.CompactTextString(m) }
func (*Transformation) ProtoMessage()    {}
func (*Transformation) Descriptor() ([]byte, []int) {
	return fileDescriptorTransformationFilter, []int{1}
}

type isTransformation_TransformationType interface {
	isTransformation_TransformationType()
}

type Transformation_TransformationTemplate struct {
	TransformationTemplate *TransformationTemplate `protobuf:"bytes,1,opt,name=transformation_template,json=transformationTemplate,oneof"`
}
type Transformation_HeaderBodyTransform struct {
	HeaderBodyTransform *HeaderBodyTransform `protobuf:"bytes,2,opt,name=header_body_transform,json=headerBodyTransform,oneof"`
}

func (*Transformation_TransformationTemplate) isTransformation_TransformationType() {}
func (*Transformation_HeaderBodyTransform) isTransformation_TransformationType()    {}

func (m *Transformation) GetTransformationType() isTransformation_TransformationType {
	if m != nil {
		return m.TransformationType
	}
	return nil
}

func (m *Transformation) GetTransformationTemplate() *TransformationTemplate {
	if x, ok := m.GetTransformationType().(*Transformation_TransformationTemplate); ok {
		return x.TransformationTemplate
	}
	return nil
}

func (m *Transformation) GetHeaderBodyTransform() *HeaderBodyTransform {
	if x, ok := m.GetTransformationType().(*Transformation_HeaderBodyTransform); ok {
		return x.HeaderBodyTransform
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Transformation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Transformation_OneofMarshaler, _Transformation_OneofUnmarshaler, _Transformation_OneofSizer, []interface{}{
		(*Transformation_TransformationTemplate)(nil),
		(*Transformation_HeaderBodyTransform)(nil),
	}
}

func _Transformation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Transformation)
	// transformation_type
	switch x := m.TransformationType.(type) {
	case *Transformation_TransformationTemplate:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransformationTemplate); err != nil {
			return err
		}
	case *Transformation_HeaderBodyTransform:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderBodyTransform); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Transformation.TransformationType has unexpected type %T", x)
	}
	return nil
}

func _Transformation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Transformation)
	switch tag {
	case 1: // transformation_type.transformation_template
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransformationTemplate)
		err := b.DecodeMessage(msg)
		m.TransformationType = &Transformation_TransformationTemplate{msg}
		return true, err
	case 2: // transformation_type.header_body_transform
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderBodyTransform)
		err := b.DecodeMessage(msg)
		m.TransformationType = &Transformation_HeaderBodyTransform{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Transformation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Transformation)
	// transformation_type
	switch x := m.TransformationType.(type) {
	case *Transformation_TransformationTemplate:
		s := proto.Size(x.TransformationTemplate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Transformation_HeaderBodyTransform:
		s := proto.Size(x.HeaderBodyTransform)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Extraction struct {
	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// what information to extract. if extraction fails the result is
	// an empty value.
	Regex    string `protobuf:"bytes,2,opt,name=regex,proto3" json:"regex,omitempty"`
	Subgroup uint32 `protobuf:"varint,3,opt,name=subgroup,proto3" json:"subgroup,omitempty"`
}

func (m *Extraction) Reset()                    { *m = Extraction{} }
func (m *Extraction) String() string            { return proto.CompactTextString(m) }
func (*Extraction) ProtoMessage()               {}
func (*Extraction) Descriptor() ([]byte, []int) { return fileDescriptorTransformationFilter, []int{2} }

func (m *Extraction) GetHeader() string {
	if m != nil {
		return m.Header
	}
	return ""
}

func (m *Extraction) GetRegex() string {
	if m != nil {
		return m.Regex
	}
	return ""
}

func (m *Extraction) GetSubgroup() uint32 {
	if m != nil {
		return m.Subgroup
	}
	return 0
}

type TransformationTemplate struct {
	AdvancedTemplates bool `protobuf:"varint,1,opt,name=advanced_templates,json=advancedTemplates,proto3" json:"advanced_templates,omitempty"`
	// Extractors are in the origin request language domain
	Extractors map[string]*Extraction   `protobuf:"bytes,2,rep,name=extractors" json:"extractors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Headers    map[string]*InjaTemplate `protobuf:"bytes,3,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to BodyTransformation:
	//	*TransformationTemplate_Body
	//	*TransformationTemplate_Passthrough
	//	*TransformationTemplate_MergeExtractorsToBody
	BodyTransformation isTransformationTemplate_BodyTransformation `protobuf_oneof:"body_transformation"`
}

func (m *TransformationTemplate) Reset()         { *m = TransformationTemplate{} }
func (m *TransformationTemplate) String() string { return proto.CompactTextString(m) }
func (*TransformationTemplate) ProtoMessage()    {}
func (*TransformationTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptorTransformationFilter, []int{3}
}

type isTransformationTemplate_BodyTransformation interface {
	isTransformationTemplate_BodyTransformation()
}

type TransformationTemplate_Body struct {
	Body *InjaTemplate `protobuf:"bytes,4,opt,name=body,oneof"`
}
type TransformationTemplate_Passthrough struct {
	Passthrough *Passthrough `protobuf:"bytes,5,opt,name=passthrough,oneof"`
}
type TransformationTemplate_MergeExtractorsToBody struct {
	MergeExtractorsToBody *MergeExtractorsToBody `protobuf:"bytes,6,opt,name=merge_extractors_to_body,json=mergeExtractorsToBody,oneof"`
}

func (*TransformationTemplate_Body) isTransformationTemplate_BodyTransformation()                  {}
func (*TransformationTemplate_Passthrough) isTransformationTemplate_BodyTransformation()           {}
func (*TransformationTemplate_MergeExtractorsToBody) isTransformationTemplate_BodyTransformation() {}

func (m *TransformationTemplate) GetBodyTransformation() isTransformationTemplate_BodyTransformation {
	if m != nil {
		return m.BodyTransformation
	}
	return nil
}

func (m *TransformationTemplate) GetAdvancedTemplates() bool {
	if m != nil {
		return m.AdvancedTemplates
	}
	return false
}

func (m *TransformationTemplate) GetExtractors() map[string]*Extraction {
	if m != nil {
		return m.Extractors
	}
	return nil
}

func (m *TransformationTemplate) GetHeaders() map[string]*InjaTemplate {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *TransformationTemplate) GetBody() *InjaTemplate {
	if x, ok := m.GetBodyTransformation().(*TransformationTemplate_Body); ok {
		return x.Body
	}
	return nil
}

func (m *TransformationTemplate) GetPassthrough() *Passthrough {
	if x, ok := m.GetBodyTransformation().(*TransformationTemplate_Passthrough); ok {
		return x.Passthrough
	}
	return nil
}

func (m *TransformationTemplate) GetMergeExtractorsToBody() *MergeExtractorsToBody {
	if x, ok := m.GetBodyTransformation().(*TransformationTemplate_MergeExtractorsToBody); ok {
		return x.MergeExtractorsToBody
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransformationTemplate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransformationTemplate_OneofMarshaler, _TransformationTemplate_OneofUnmarshaler, _TransformationTemplate_OneofSizer, []interface{}{
		(*TransformationTemplate_Body)(nil),
		(*TransformationTemplate_Passthrough)(nil),
		(*TransformationTemplate_MergeExtractorsToBody)(nil),
	}
}

func _TransformationTemplate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransformationTemplate)
	// body_transformation
	switch x := m.BodyTransformation.(type) {
	case *TransformationTemplate_Body:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Body); err != nil {
			return err
		}
	case *TransformationTemplate_Passthrough:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Passthrough); err != nil {
			return err
		}
	case *TransformationTemplate_MergeExtractorsToBody:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MergeExtractorsToBody); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransformationTemplate.BodyTransformation has unexpected type %T", x)
	}
	return nil
}

func _TransformationTemplate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransformationTemplate)
	switch tag {
	case 4: // body_transformation.body
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InjaTemplate)
		err := b.DecodeMessage(msg)
		m.BodyTransformation = &TransformationTemplate_Body{msg}
		return true, err
	case 5: // body_transformation.passthrough
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Passthrough)
		err := b.DecodeMessage(msg)
		m.BodyTransformation = &TransformationTemplate_Passthrough{msg}
		return true, err
	case 6: // body_transformation.merge_extractors_to_body
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MergeExtractorsToBody)
		err := b.DecodeMessage(msg)
		m.BodyTransformation = &TransformationTemplate_MergeExtractorsToBody{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransformationTemplate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransformationTemplate)
	// body_transformation
	switch x := m.BodyTransformation.(type) {
	case *TransformationTemplate_Body:
		s := proto.Size(x.Body)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransformationTemplate_Passthrough:
		s := proto.Size(x.Passthrough)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransformationTemplate_MergeExtractorsToBody:
		s := proto.Size(x.MergeExtractorsToBody)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//
// custom functions:
// header_value(name) -> from the original headers
// extracted_value(name, index) -> from the extracted values
type InjaTemplate struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *InjaTemplate) Reset()                    { *m = InjaTemplate{} }
func (m *InjaTemplate) String() string            { return proto.CompactTextString(m) }
func (*InjaTemplate) ProtoMessage()               {}
func (*InjaTemplate) Descriptor() ([]byte, []int) { return fileDescriptorTransformationFilter, []int{4} }

func (m *InjaTemplate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Passthrough struct {
}

func (m *Passthrough) Reset()                    { *m = Passthrough{} }
func (m *Passthrough) String() string            { return proto.CompactTextString(m) }
func (*Passthrough) ProtoMessage()               {}
func (*Passthrough) Descriptor() ([]byte, []int) { return fileDescriptorTransformationFilter, []int{5} }

type MergeExtractorsToBody struct {
}

func (m *MergeExtractorsToBody) Reset()         { *m = MergeExtractorsToBody{} }
func (m *MergeExtractorsToBody) String() string { return proto.CompactTextString(m) }
func (*MergeExtractorsToBody) ProtoMessage()    {}
func (*MergeExtractorsToBody) Descriptor() ([]byte, []int) {
	return fileDescriptorTransformationFilter, []int{6}
}

type HeaderBodyTransform struct {
}

func (m *HeaderBodyTransform) Reset()         { *m = HeaderBodyTransform{} }
func (m *HeaderBodyTransform) String() string { return proto.CompactTextString(m) }
func (*HeaderBodyTransform) ProtoMessage()    {}
func (*HeaderBodyTransform) Descriptor() ([]byte, []int) {
	return fileDescriptorTransformationFilter, []int{7}
}

func init() {
	proto.RegisterType((*Transformations)(nil), "envoy.api.v2.filter.http.Transformations")
	proto.RegisterType((*Transformation)(nil), "envoy.api.v2.filter.http.Transformation")
	proto.RegisterType((*Extraction)(nil), "envoy.api.v2.filter.http.Extraction")
	proto.RegisterType((*TransformationTemplate)(nil), "envoy.api.v2.filter.http.TransformationTemplate")
	proto.RegisterType((*InjaTemplate)(nil), "envoy.api.v2.filter.http.InjaTemplate")
	proto.RegisterType((*Passthrough)(nil), "envoy.api.v2.filter.http.Passthrough")
	proto.RegisterType((*MergeExtractorsToBody)(nil), "envoy.api.v2.filter.http.MergeExtractorsToBody")
	proto.RegisterType((*HeaderBodyTransform)(nil), "envoy.api.v2.filter.http.HeaderBodyTransform")
}

func init() { proto.RegisterFile("transformation_filter.proto", fileDescriptorTransformationFilter) }

var fileDescriptorTransformationFilter = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x6f, 0xda, 0x4e,
	0x10, 0xc5, 0xfc, 0xfb, 0x25, 0x43, 0x12, 0xf2, 0x5b, 0x02, 0x59, 0xd1, 0x0b, 0xb2, 0xda, 0x8a,
	0x4b, 0xdc, 0x8a, 0x5e, 0xaa, 0x28, 0x8d, 0x2a, 0x24, 0x24, 0x72, 0xa8, 0x54, 0xad, 0x50, 0x2b,
	0xf5, 0x42, 0x17, 0xbc, 0xc1, 0x24, 0xe0, 0xb5, 0x76, 0x17, 0x84, 0x3f, 0x69, 0x3f, 0x43, 0x3f,
	0x42, 0x6f, 0x95, 0xd7, 0xc6, 0xd8, 0xae, 0x2d, 0x91, 0x9b, 0x87, 0x99, 0xf7, 0xde, 0xce, 0x9b,
	0x19, 0xe0, 0x95, 0x12, 0xd4, 0x95, 0x8f, 0x5c, 0xac, 0xa9, 0x5a, 0x72, 0x77, 0xfa, 0xb8, 0x5c,
	0x29, 0x26, 0x2c, 0x4f, 0x70, 0xc5, 0x11, 0x66, 0xee, 0x96, 0xfb, 0x16, 0xf5, 0x96, 0xd6, 0x76,
	0x60, 0x45, 0x29, 0x47, 0x29, 0xcf, 0xfc, 0x6d, 0x40, 0x73, 0x92, 0x42, 0x4a, 0xe4, 0x40, 0x33,
	0x4d, 0x26, 0xb1, 0xd1, 0xab, 0xf4, 0x1b, 0x83, 0x7b, 0xab, 0x88, 0xc7, 0xca, 0x70, 0x64, 0xe3,
	0x91, 0xab, 0x84, 0x4f, 0xb2, 0xb4, 0xdd, 0x15, 0x5c, 0xe5, 0x15, 0xa2, 0x4b, 0xa8, 0x3c, 0x33,
	0x1f, 0x1b, 0x3d, 0xa3, 0x7f, 0x4a, 0x82, 0x4f, 0x74, 0x0f, 0xb5, 0x2d, 0x5d, 0x6d, 0x18, 0x2e,
	0xf7, 0x8c, 0x7e, 0x63, 0xd0, 0x3f, 0xf6, 0x25, 0x24, 0x84, 0xdd, 0x96, 0x3f, 0x1a, 0xe6, 0x1f,
	0x03, 0x2e, 0xd2, 0x59, 0xf4, 0x0c, 0xd7, 0x19, 0xdf, 0x14, 0x5b, 0x7b, 0x2b, 0xaa, 0x98, 0x16,
	0x6f, 0x0c, 0xde, 0x1f, 0x2b, 0x34, 0x89, 0x70, 0xe3, 0x12, 0xe9, 0xa8, 0xdc, 0x0c, 0x9a, 0x43,
	0xdb, 0x61, 0xd4, 0x66, 0x62, 0x3a, 0xe3, 0xb6, 0x3f, 0x8d, 0xab, 0xa2, 0x9e, 0x6e, 0x8a, 0xa5,
	0xc6, 0x1a, 0x36, 0xe4, 0xb6, 0x1f, 0x8b, 0x8e, 0x4b, 0xa4, 0xe5, 0xfc, 0xfb, 0xf3, 0xb0, 0x0d,
	0xad, 0x6c, 0x47, 0xbe, 0xc7, 0xcc, 0x6f, 0x00, 0xa3, 0x9d, 0x12, 0x74, 0xae, 0xdb, 0xee, 0x40,
	0x3d, 0xc4, 0x46, 0x16, 0x47, 0x11, 0xba, 0x82, 0x9a, 0x60, 0x0b, 0xb6, 0xd3, 0x2f, 0x3a, 0x25,
	0x61, 0x80, 0xba, 0x70, 0x22, 0x37, 0xb3, 0x85, 0xe0, 0x1b, 0x0f, 0x57, 0x7a, 0x46, 0xff, 0x9c,
	0xc4, 0xb1, 0xf9, 0xab, 0x06, 0x9d, 0x7c, 0x23, 0xd0, 0x0d, 0x20, 0x6a, 0x6f, 0xa9, 0x3b, 0x67,
	0x76, 0xec, 0xaa, 0xd4, 0x82, 0x27, 0xe4, 0xff, 0x7d, 0x66, 0x5f, 0x2d, 0xd1, 0x4f, 0x00, 0x16,
	0xbe, 0x90, 0x0b, 0x89, 0xcb, 0x7a, 0xe1, 0x3e, 0xbf, 0xd4, 0x7d, 0x6b, 0x14, 0x53, 0x84, 0x2b,
	0x97, 0xe0, 0x44, 0xdf, 0xe1, 0xbf, 0xb0, 0x4f, 0x89, 0x2b, 0x9a, 0xfe, 0xd3, 0x8b, 0xe9, 0xc3,
	0x41, 0x44, 0xdc, 0x7b, 0x36, 0x74, 0x07, 0xd5, 0x60, 0xa2, 0xb8, 0xaa, 0xe7, 0xf8, 0xb6, 0x98,
	0xf5, 0xc1, 0x7d, 0xa2, 0x89, 0x45, 0xd1, 0x28, 0xf4, 0x00, 0x0d, 0x8f, 0x4a, 0xa9, 0x1c, 0xc1,
	0x37, 0x0b, 0x07, 0xd7, 0x34, 0xc9, 0x9b, 0x62, 0x92, 0xaf, 0x87, 0xe2, 0x71, 0x89, 0x24, 0xb1,
	0xe8, 0x09, 0xf0, 0x9a, 0x89, 0x05, 0x9b, 0x1e, 0xba, 0x9e, 0x2a, 0xae, 0xd7, 0x0d, 0xd7, 0x35,
	0xef, 0xbb, 0x62, 0xde, 0x2f, 0x01, 0xf2, 0xe0, 0xdf, 0x84, 0x07, 0x8b, 0x35, 0x2e, 0x91, 0xf6,
	0x3a, 0x2f, 0xd1, 0x9d, 0x43, 0x33, 0x63, 0x76, 0xce, 0xd9, 0xde, 0xa6, 0xcf, 0xf6, 0x75, 0xb1,
	0xfa, 0x61, 0x3b, 0x13, 0x27, 0xdb, 0x9d, 0xc1, 0x59, 0xd2, 0xf2, 0x1c, 0x85, 0xbb, 0xb4, 0xc2,
	0x91, 0xe6, 0x27, 0x34, 0x82, 0x8b, 0x49, 0xdf, 0xa3, 0x1e, 0xb9, 0x69, 0xc2, 0x59, 0x12, 0x81,
	0x10, 0x54, 0x15, 0xdb, 0xa9, 0x48, 0x5b, 0x7f, 0x9b, 0xe7, 0xd0, 0x48, 0x4c, 0xc3, 0xbc, 0x86,
	0x76, 0xae, 0x89, 0x66, 0x1b, 0x5a, 0x39, 0x27, 0x3c, 0xbc, 0xfc, 0x71, 0x91, 0x16, 0x9d, 0xd5,
	0xf5, 0xff, 0xf5, 0x87, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x17, 0x66, 0x32, 0x22, 0xce, 0x05,
	0x00, 0x00,
}
